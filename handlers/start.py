from aiogram import types
from aiogram.dispatcher import FSMContext
from loader import dp
from keyboards import start_menu
from utils.misc import rate_limit
from aiogram.dispatcher.filters import Text


# –ö–æ–º–∞–Ω–¥–æ–π start –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–º–µ–Ω—è–µ—Ç –≤—Å–µ —Ç–µ–∫—É—â–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞—á–∞–ª—å–Ω–æ–µ –ø—Ä–∏–≤–µ—Å—Ç—Å—Ç–≤–∏–µ
@rate_limit(limit=2)
@dp.message_handler(state='*', commands=['/start', '/help'])
@dp.message_handler(Text(equals=['/start', '/help'], ignore_case=True), state='*')
async def start(message: types.Message, state: FSMContext):
    await state.finish()
    await message.answer(
        f"–ü—Ä–∏–≤–µ—Ç, —è —É–∂–µ —É–º–µ—é:\n"
        f"‚Ä¢ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã\n"
        f"‚Ä¢ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∞–ª—é—Ç—É\n"
        f"‚Ä¢ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ñ–æ—Ç–æ –º–∏–ª—ã—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö\n"
        f"–ß—Ç–æ –ø–æ–ø—Ä–æ–±—É–µ–º? üòâ", reply_markup=start_menu
    )
